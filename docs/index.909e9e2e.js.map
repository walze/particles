{"version":3,"file":"index.909e9e2e.js","sources":["../src/config.ts","../src/helpers/assert.ts","../src/Particle.ts","../src/helpers/random.ts","../src/canvas/particles.ts","../src/canvas/app.ts","../src/main.ts"],"sourcesContent":["export const resolution = 1.5\n\nconst isVertical = window.innerHeight > window.innerWidth\n\nconst w = window.innerWidth\nconst h = window.innerHeight\n\n// rw * h = rh * w\n// rw = rh * w / h\n// rh = rw * h / w\n\nconst r = isVertical ? 1080 : 1920\n\nconst width = isVertical ? r : (r * w) / h\nconst height = isVertical ? (r * h) / w : r\n\nexport const aspect = [\n  Math.floor(width),\n  Math.floor(height),\n] as const\n","class AssertionError extends Error {\n  constructor(value: unknown, message?: string) {\n    super(message, {\n      cause: value,\n    })\n\n    this.name = 'AssertionError'\n\n    // eslint-disable-next-line no-console\n    console.error(message || 'Uncaught assertion', '=>', value)\n  }\n}\n\ntype Assert = <T>(value: T, message?: string) => asserts value\n\nconst assert: Assert = (value, text) => {\n  if (!value) throw new AssertionError(value, text)\n}\n\nexport default assert\n","import {\n  Sprite,\n  ParticleContainer as PC,\n  Texture,\n} from 'pixi.js'\nimport { aspect } from './config'\nimport assert from './helpers/assert'\n\nconst [width, height] = aspect\n\nconst canvas = new OffscreenCanvas(\n  1,\n  1,\n) as unknown as HTMLCanvasElement\n\nconst ctx = canvas.getContext('2d')\nassert(ctx)\nctx.fillStyle = '#FFF'\nctx.fillRect(0, 0, 1, 1)\n\nconst WhiteTexture = Texture.from(canvas)\n\nconst G = 6.6743015e-11\nlet mass = 7.34767309e13\n\nconst gravity = (c1: [number, number], c2: [number, number]) => {\n  const [x1, y1] = c1\n  const [x2, y2] = c2\n\n  const dx = x2 - x1\n  const dy = y2 - y1\n\n  const d = Math.sqrt(dx ** 2 + dy ** 2)\n\n  const a = (G * mass) / d ** 2\n\n  const ux = dx / d\n  const uy = dy / d\n\n  const ax = ux * a\n  const ay = uy * a\n\n  mass *= 1 + G * 10\n\n  return [ax, ay, [dx, dy]] as [number, number, [number, number]]\n}\n\nconst center = [width / 2, height / 2] as [number, number]\n\nexport const update = (p: Particle) => {\n  const [nvx, nvy, dv] = gravity(p.coords, center)\n  p.vx += nvx\n  p.vy += nvy\n\n  const close = Math.sqrt(dv[0] ** 2 + dv[1] ** 2) <= 50\n  if (close) {\n    mass *= 1 + Math.sqrt(G) / 2\n\n    p.vx = 0\n    p.vy = 0\n    p.position.set(-100000, -100000)\n  }\n\n  p.position.set(p.x + p.vx, p.y + p.vy)\n}\n\nexport class Particle extends Sprite {\n  vx = -1\n  vy = -1\n\n  override name = `${this.x}${this.y}`\n\n  get coords() {\n    return [this.x, this.y] as [number, number]\n  }\n\n  constructor(x: number, y: number) {\n    super(WhiteTexture)\n\n    this.x = x\n    this.y = y\n  }\n}\n\nexport class ParticleContainer extends PC {\n  override children: Particle[] = []\n}\n","export const randomInt = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min + 1)) + min\n","import { randomInt } from '../helpers/random'\nimport { Particle, ParticleContainer, update } from '../Particle'\nimport { aspect } from '../config'\n\nconst [width, height] = aspect\nexport const PARTICLE_NUMBER = 200_000\nconsole.info('Rendering', PARTICLE_NUMBER, 'particles')\n\nexport const stage = new ParticleContainer(PARTICLE_NUMBER)\n\nconst r = (d: number) => randomInt(1, d)\n\nexport const createParticles = () => {\n  for (let i = 0; i < PARTICLE_NUMBER; i++) {\n    const p = new Particle(r(width), r(height))\n\n    update(p)\n\n    stage.addChild(p)\n  }\n}\n","import { ParticleRenderer, Renderer, Ticker } from 'pixi.js'\nimport { type Particle, update as pUpdate } from '../Particle'\nimport { PARTICLE_NUMBER, stage } from './particles'\n\nimport { aspect, resolution } from '../config'\n\nconst [width, height] = aspect\n\nexport const isInBounds = ({ x, y }: { x: number; y: number }) =>\n  x > -1000 || x < width + 1000 || y > -1000 || y < height + 1000\n\nexport const update = () => {\n  for (let i = 0; i < PARTICLE_NUMBER; i++) {\n    const p = stage.children[i] as Particle\n\n    if (isInBounds(p)) pUpdate(p)\n  }\n}\n\nTicker.system.autoStart = false\n\nexport const renderer = new Renderer({\n  width,\n  height,\n  backgroundColor: 0x111111,\n  powerPreference: 'high-performance',\n  useContextAlpha: false,\n  antialias: false,\n  resolution,\n})\n\nexport const pr = new ParticleRenderer(renderer)\nexport const render = pr.render.bind(pr, stage)\n\nexport const start = () => {\n  // window.loop.delta = t - window.loop.previous\n  // window.loop.previous = t\n  // window.loop.elapsed = t\n\n  update()\n  render()\n\n  requestAnimationFrame(start)\n}\n\nexport const destroy = () => {\n  pr.destroy()\n  renderer.destroy()\n  stage.destroy({\n    children: true,\n  })\n}\n","import { renderer, render, start } from './canvas/app'\nimport { createParticles } from './canvas/particles'\n\nconst { body } = document\n\nconst { view } = renderer\ncreateParticles()\nrender()\n\nbody.appendChild(view)\n\nwindow.onload = start.bind(null, 0)\n"],"names":["resolution","isVertical","w","h","r","width","height","aspect","AssertionError","value","message","assert","text","canvas","ctx","WhiteTexture","Texture","G","mass","gravity","c1","c2","x1","y1","x2","y2","dx","dy","d","a","ux","uy","ax","ay","center","update","p","nvx","nvy","dv","Particle","Sprite","x","y","ParticleContainer","PC","randomInt","min","max","PARTICLE_NUMBER","stage","createParticles","i","isInBounds","pUpdate","Ticker","renderer","Renderer","pr","ParticleRenderer","render","start","body","view"],"mappings":"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"}